MyEXT60804=typeof MyEXT60804!=="undefined"?MyEXT60804:{};MyEXT60804.UpdateManager=(function(){var g=360;var y=MyEXT60804.Consts;var j=MyEXT60804.Utils;var o=MyEXT60804.Reports;var r=MyEXT60804.ErrorMessage;var d=MyEXT60804.LogFile;var v=MyEXT60804.ExtensionDataStore;var l=Components.classes["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefBranch);var c=y.CROSSRIDER_BRANCH+"."+y.CROSSRIDER_PRE_INSTALLED_APP+".";var x=false;var t=new MyEXT60804.Delegate();var i=j.getManifestUrl();var a=true;var n=function(z){var A=new MyEXT60804.XHR({url:z.url+"?rnd="+(new Date()).getTime(),method:"get",async:true,callback:function(B){if(B.call==="success"){z.success(B.response,B.additionalInfo);}else{z.failure(B.response,B.additionalInfo);}}}).send();};var p=function(){d.write("file: updateManager.js, function: _setLastUpdate");l.setCharPref(c+"lastUpdate",""+(new Date()).getTime());};var k=function(){d.write("file: updateManager.js, function: _getLastUpdate");if(!l.prefHasUserValue(c+"lastUpdate")){return 0;}return parseInt(l.getCharPref(c+"lastUpdate"),10);};var h=function(){d.write("file: updateManager.js, function: _reloadBackground");var z=document.createEvent("Events");z.initEvent(y.RELOAD_BG_EVENT_NAME,true,false);document.dispatchEvent(z);};var f=function(){d.write("file: updateManager.js, function: _updateCompleteHandler");x=false;t.invokeOnce();};var u=function(D,L,J,H){var P=false;var O=false;var N=false;var B=D.newapp_Ver;var F=L.newapp_Ver;var E=D.newapp_BackgroundVer;var I=L.newapp_BackgroundVer;var M=D.newapp_PluginsVersion;var z=L.newapp_PluginsVersion;var C={pluginsJson:null,manifest:J,pluginsCode:{},userCode:{background:null,extension:null}};var A=function(Q){try{new Function(Q);return true;}catch(R){}return false;};var G=function(V){var U=v.getEnabledPlugins();var R=function(W){return function(X){d.write("file: updateManager.js, function: ~fetch plugin "+W.name);n({url:W.url,success:function(Y){if(!A(Y)){o.error(new MyEXT60804.ErrorMessage(new Error("syntax_error"),"UpdateManager->_doUpdate->_fetchPluginGenerator","plugin="+W.name));X({message:"Error fetching plugin "+W.id});return;}C.pluginsCode[W.id]={code:Y,name:W.name};N=true;X();},failure:function(){X({message:"Error fetching plugin "+W.id});}});};};var S=function(Z){var Y;var X=true;if(H){return true;}for(var W=0;W<U.length;W++){Y=U[W];if(Y.id===Z.id){X=(Y.ver<Z.ver);break;}}return X;};var T=function(X){var Z=v.getPluginsOrderdLists();var aa,W;d.write("file: updateManager.js, function: _setCodeChangeFlagsOnPluginRemoved");if(H){O=N=true;return;}for(var ab in y.PluginTypes){if(y.PluginTypes.hasOwnProperty(ab)){aa=Z[y.PluginTypes[ab]];W=X[y.PluginTypes[ab]];if(aa.length!==W.length){N=true;if(y.PluginTypes[ab]===y.PluginTypes.BACKGROUND){O=true;return;}continue;}for(var Y=0;Y<aa.length;Y++){if(aa[Y].id!==W[Y].id){N=true;if(y.PluginTypes[ab]===y.PluginTypes.BACKGROUND){O=true;return;}break;}}}}};var Q=function(W){d.write("file: updateManager.js, function: _getNewEnabledPlugins");n({url:L.newapp_PluginsUrl,success:function(Y){d.write("file: updateManager.js, function: _getNewEnabledPlugins, request success callback");var X=JSON.parse(Y);if(typeof X.plugins_version!=="undefined"&&parseInt(X.plugins_version)!==parseInt(z)){W(null);return;}C.pluginsJson=Y;W(j.getEnabledPlugins(X),j.generatePluginsOrderLists(X));},failure:function(){d.write("file: updateManager.js, function: _getNewEnabledPlugins, request failure callback");W(null);}});};d.write("file: updateManager.js, function: _getNewPlugins");if(H||((typeof M!=="undefined"&&typeof z!=="undefined")&&parseInt(M,10)<parseInt(z,10))){Q(function(Y,X){var W=[];if(!Y){V({message:"error in getting enabled plugins"});return;}T(X);Y.forEach(function(aa,Z){if(S(aa)){if(j.isBgPlugin(aa)){O=true;}W.push(R(aa));}});j.FunctionsRunner.parallel(W,function(Z){if(Z){d.write("file: updateManager.js, function: _getNewPlugins, ~parallel callback, error: "+Z.message);V(Z);return;}d.write("file: updateManager.js, function: _getNewPlugins, ~parallel callback");V();});});}else{d.write("file: updateManager.js, function: _getNewPlugins, no need to fetch plugins");V();}};var K=function(S){var R=function(T){d.write("file: updateManager.js, function: _getExtensionCode");if(H||((typeof B!=="undefined"&&typeof F!=="undefined")&&parseInt(B,10)<parseInt(F,10))){n({url:L.newapp_JSLink,success:function(U){d.write("file: updateManager.js, function: _getExtensionCode, request success callback");C.userCode.extension=U;N=true;T();},failure:function(){d.write("file: updateManager.js, function: _getExtensionCode, request failure callback");T({message:"error in extension code request"});}});}else{d.write("file: updateManager.js, function: _getExtensionCode, no need to fetch code");T();}};var Q=function(T){d.write("file: updateManager.js, function: _getBackgroundCode");if(H||((typeof E!=="undefined"&&typeof I!=="undefined")&&parseInt(E,10)<parseInt(I,10))){n({url:L.newapp_BackgroundJSLink,success:function(U){d.write("file: updateManager.js, function: _getBackgroundCode, request success callback");C.userCode.background=U;P=true;T();},failure:function(){d.write("file: updateManager.js, function: _getBackgroundCode, request failures callback");T({message:"error in background code request"});}});}else{d.write("file: updateManager.js, function: _getBackgroundCode, no need to fetch code");T();}};d.write("file: updateManager.js, function: _getNewUserCodes");j.FunctionsRunner.parallel([R,Q],function(T){if(T){d.write("file: updateManager.js, function: _getNewUserCodes, ~parallel callback, error: "+T.message);S(T);return;}d.write("file: updateManager.js, function: _getNewUserCodes, ~parallel callback");S();});};d.write("file: updateManager.js, function: _doUpdate");j.FunctionsRunner.parallel([G,K,j.removeExpiredDBEntries],function(Q){if(Q){d.write("file: updateManager.js, function: _doUpdate, error in code fetching");f();return;}d.write("file: updateManager.js, function: _doUpdate, ~parallel callback");j.saveManifestToPrefs(L);j.setSearch(L);v.setNewExtensionData(C,function(){d.write("file: updateManager.js, function: _doUpdate, new code saved");o.update(parseInt(B,10),parseInt(E,10),parseInt(M,10));if(H||N){v.reload();v.onStoreReady(function(){if(P||O){h();f();}else{f();}}).onStoreError(function(R){});}else{f();}});});};var s=function(B){d.write("file: updateManager.js, function: _checkIfUpdateNeeded");var A=function(){d.write("file: updateManager.js, function: _checkIfUpdateNeeded, onStoreReady callback");var E=v.getManifest();var C=k();var D=E.newapp_UpdateInterval||g;D=parseInt(D,10);if(C&&(C+(D*60*1000)>(new Date()).getTime())){d.write("file: updateManager.js, interval has not passed yet");B(false);return;}p();n({url:i,success:function(F){if(typeof F!=="string"||F.length<=0){d.write("file: updateManager.js, function: _checkIfUpdateNeeded, error: problem with manifest str");B(false);return;}d.write("file: updateManager.js, function: _checkIfUpdateNeeded, xhr success callback");var G=j.parseManifestXml(F);d.write("file: updateManager.js, oldManifest.ver: "+E.newapp_Ver+", newManifest.ver "+G.newapp_Ver);B(parseInt(E.newapp_Ver,10)<parseInt(G.newapp_Ver,10),E,G,F);},failure:function(){d.write("file: updateManager.js, function: _checkIfUpdateNeeded, xhr fail callback");B(false,E,E);}});};var z=function(D){d.write("file: updateManager.js, function: _checkIfUpdateNeeded, onStoreError callback");if(D&&D.message===y.FILE_MISSING){var C=k();if(!C||(C+(g*60*1000)<(new Date()).getTime())){q();return;}d.write("file: updateManager.js, function: _checkIfUpdateNeeded, error: _storeErrorHandler interval has not passed yet");B(false);}};v.onStoreReady(A).onStoreError(z);};var b=function b(){d.write("file: updateManager.js, function: _checkNextUpdate");x=true;if(typeof b.updateTimerId!=="undefined"){clearInterval(b.updateTimerId);delete b.updateTimerId;}s(function(z,C,B,A){d.write("file: updateManager.js, function: _checkNextUpdate, isUpdateNeeded: "+z);b.updateTimerId=setTimeout(function(){b();},1000*60);if(!z){f();return;}u(C,B,A);});};var m=function(){d.write("file: updateManager.js, function: forceUpdate");l.setCharPref(c+"lastUpdate","0");b();};var q=function(){d.write("file: updateManager.js, function: updateNedded");p();n({url:i,success:function(z){d.write("file: updateManager.js, function: updateNedded, xhr success callback");var A=j.parseManifestXml(z);u(A,A,z,a);},failure:function(){d.write("file: updateManager.js, function: updateNedded, xhr fail callback");}});};var w=function(z){if(!x){z();return;}t.addObserver(z);};(function e(){if(MyEXT60804.Utils.isNightly()){return;}b();})();return{onUpdateComplete:w,updateNedded:q,forceUpdate:m};}());
